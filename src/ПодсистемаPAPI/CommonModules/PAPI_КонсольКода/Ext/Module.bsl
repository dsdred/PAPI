#Область КонсольКода

// Добавлена консоль кода Monaco https://github.com/salexdv/bsl_console 
// На основе разработки https://infostart.ru/1c/tools/1989363/

#КонецОбласти

Процедура ПриСозданииНаСервере(знач Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ДобавитьРеквизитыКонсолиКода(Форма);
	
	ПараметрыКонсоли = PAPI_КонсольКодаКлиентСервер.ПараметрыФормыКонсоли(Форма);
	
	ИнициализацияМетаданных(ПараметрыКонсоли);
	
	ИмяРеквизита = PAPI_КонсольКодаКлиентСервер.ИмяРеквизитаПараметрыКонсолиКода();
	Форма[ИмяРеквизита] = Новый ФиксированнаяСтруктура(ПараметрыКонсоли);
	
КонецПроцедуры

Процедура ИнициализацияКоманднойПанели(знач Форма, знач ИмяРеквизита, знач Элемент = Неопределено, знач ПараметрыПанели = Неопределено) Экспорт
	
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Найти("КоманднаяПанель" + ИмяРеквизита);
	КонецЕсли;
	
	Если НЕ PAPI_КонсольКодаКлиентСервер.ЭтоПараметрыПанелиКонсоли(ПараметрыПанели) Тогда
		ПараметрыПанели = PAPI_КонсольКодаКлиентСервер.ПараметрыПанелиКонсоли();
	КонецЕсли;
	
	СтрШаблонИмени = "%1_%2";
	
	ПараметрыКонсоли = PAPI_КонсольКодаКлиентСервер.ПолучитьСтрокуПараметровКонсоли(Форма, ИмяРеквизита);
	ПараметрыКонсоли.ИмяКоманднойПанели = Элемент.Имя;
	
	//ЭлементКоманды.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.Авто;
	//ЭлементКоманды.ТолькоВоВсехДействиях = Неопределено;
	
	ГруппаРедактирование = Форма.Элементы.Добавить(ИмяРеквизита + "_Редактирование", Тип("ГруппаФормы"), Элемент);
	ГруппаРедактирование.Заголовок		= НСтр("ru='Редактирование'");
	ГруппаРедактирование.Вид			= ВидГруппыФормы.ГруппаКнопок;
	ГруппаРедактирование.Подсказка		= НСтр("ru='Редактирование параметров консоли кода'");
	ГруппаРедактирование.РазрешитьИзменениеСостава = Ложь;
	
	#Область КонструкторЗапроса
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "КонструкторЗапроса");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Заголовок		= НСтр("ru='Конструктор запроса'");
	КомандаФормы.Картинка		= БиблиотекаКартинок.КонструкторЗапроса;
	КомандаФормы.Отображение	= ОтображениеКнопки.КартинкаИТекст;
	КомандаФормы.Подсказка		= НСтр("ru='Открыть конструктор запроса'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаРедактирование);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.КонструкторЗапроса;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	#КонецОбласти 
	
	#Область Тема
	
	МенюТема = Форма.Элементы.Добавить(ИмяРеквизита + "_Темы", Тип("ГруппаФормы"), ГруппаРедактирование);
	МенюТема.Заголовок	= НСтр("ru='Тема'");
	МенюТема.Вид		= ВидГруппыФормы.Подменю;
	МенюТема.Видимость	= ПараметрыПанели.Тема;
	МенюТема.Подсказка	= НСтр("ru='Переключение темы консоли кода'");
	
	#Область СветлаяТема
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "СветлаяТема");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие	= "КомандаКонсолиКода";
	КомандаФормы.Заголовок	= НСтр("ru='Светлая тема'");
	КомандаФормы.Подсказка	= НСтр("ru='Включить светлую тему'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), МенюТема);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.Тема;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	ЭлементКоманды.Пометка		= Истина;
	#КонецОбласти
	
	#Область ТемнаяТема
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "ТемнаяТема");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие	= "КомандаКонсолиКода";
	КомандаФормы.Заголовок	= НСтр("ru='Темная тема'");
	КомандаФормы.Подсказка	= НСтр("ru='Включить темную тему'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), МенюТема);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.Тема;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	#КонецОбласти
	
	#КонецОбласти 
	
	#Область БыстрыеПодсказки
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "БыстрыеПодсказки");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Заголовок		= НСтр("ru='Быстрые подсказки'");
	КомандаФормы.Картинка		= БиблиотекаКартинок.ТабличныйДокументОтображатьПримечания;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Подсказка		= НСтр("ru='Вкл/выкл быстрые подсказки'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаРедактирование);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.БыстрыеПодсказки;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	ЭлементКоманды.Пометка		= Истина;
	#КонецОбласти 
	
	#Область Оформление
	
	ГруппаОформление = Форма.Элементы.Добавить(ИмяРеквизита + "_Оформление", Тип("ГруппаФормы"), ГруппаРедактирование);
	ГруппаОформление.Заголовок		= НСтр("ru='Оформление'");
	ГруппаОформление.Вид			= ВидГруппыФормы.ГруппаКнопок;
	ГруппаОформление.Подсказка		= НСтр("ru='Управление оформлением консоли кода'");
	ГруппаОформление.Отображение	= ОтображениеГруппыКнопок.Компактное;
	
	#Область ПодсвечиватьЗапросы
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "ПодсвечиватьЗапросы");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Картинка		= БиблиотекаКартинок.УсловноеОформлениеКомпоновкиДанных;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Заголовок		= НСтр("ru='Подсвечивать запросы'");
	КомандаФормы.Подсказка		= НСтр("ru='Вкл/выкл оформление текстов запросов'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаОформление);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.ПодсвечиватьЗапросы;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	#КонецОбласти
	
	#Область КартаКода
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "КартаКода");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Картинка		= БиблиотекаКартинок.ВнешнийИсточникДанныхФункция;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Заголовок		= НСтр("ru='Карта кода'");
	КомандаФормы.Подсказка		= НСтр("ru='Вкл/выкл карту кода'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаОформление);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.КартаКода;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	ЭлементКоманды.Пометка		= Истина;
	#КонецОбласти
	
	#Область ПробелыИТабуляции
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "ПробелыИТабуляции");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Картинка		= БиблиотекаКартинок.PAPI_ПробелыИТабуляция;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Заголовок		= НСтр("ru='Пробелы и табуляции'");
	КомандаФормы.Подсказка		= НСтр("ru='Вкл/выкл отображение пробелов и табуляций'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаОформление);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.ПробелыИТабуляции;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	#КонецОбласти
	
	#КонецОбласти 
	
	#Область СравнитьСОригиналом
	
	ГруппаСравнение = Форма.Элементы.Добавить(ИмяРеквизита + "_Сравнение", Тип("ГруппаФормы"), Элемент);
	ГруппаСравнение.Заголовок		= НСтр("ru='Сравнение'");
	ГруппаСравнение.Вид				= ВидГруппыФормы.ГруппаКнопок;
	ГруппаСравнение.Подсказка		= НСтр("ru='Сравнение кода'");
	ГруппаСравнение.РазрешитьИзменениеСостава = Ложь;
	
	#Область СравнитьСОригиналом
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "СравнитьСОригиналом");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Картинка		= БиблиотекаКартинок.PAPI_РежимСравнения;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Заголовок		= НСтр("ru='Сравнение с оригиналом'");
	КомандаФормы.Подсказка		= НСтр("ru='Вкл/выкл сравнение с исходным текстом'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаСравнение);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.РежимСравнения;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	ЭлементКоманды.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
	//ЭлементКоманды.ТолькоВоВсехДействиях	= Неопределено;
	#КонецОбласти
	
	ГруппаПеремещение = Форма.Элементы.Добавить(ИмяРеквизита + "_Перемещение", Тип("ГруппаФормы"), Элемент);
	ГруппаПеремещение.Заголовок		= НСтр("ru='Перемещение'");
	ГруппаПеремещение.Вид			= ВидГруппыФормы.ГруппаКнопок;
	ГруппаПеремещение.Видимость		= Ложь;
	ГруппаПеремещение.Подсказка		= НСтр("ru='Перемещение по изменениям'");
	ГруппаПеремещение.Отображение	= ОтображениеГруппыКнопок.Компактное;
	ГруппаПеремещение.РазрешитьИзменениеСостава = Ложь;
	
	#Область ПредыдущееРасхождение
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "ПредыдущееРасхождение");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Картинка		= БиблиотекаКартинок.ПереместитьВверх;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Заголовок		= НСтр("ru='Предыдущее расхождение'");
	КомандаФормы.Подсказка		= НСтр("ru='Перейти к предыдущему расхождению'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаПеремещение);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= Истина; 
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	#КонецОбласти
	
	#Область СледующееРасхождение
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "СледующееРасхождение");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Картинка		= БиблиотекаКартинок.ПереместитьВниз;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Заголовок		= НСтр("ru='Следующее расхождение'");
	КомандаФормы.Подсказка		= НСтр("ru='Перейти к следующему расхождению'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаПеремещение);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= Истина;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	#КонецОбласти

	#КонецОбласти 
	
	#Область СтрокаСостояния
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "СтрокаСостояния");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Заголовок		= НСтр("ru='Строка состояния'");
	КомандаФормы.Картинка		= БиблиотекаКартинок.ПереключитьАктивность;
	КомандаФормы.Отображение	= ОтображениеКнопки.Картинка;
	КомандаФормы.Подсказка		= НСтр("ru='Вкл/выкл отображение строки состояния'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элемент);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.СтрокаСостояния;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	#КонецОбласти

	#Область ДирективаКомпиляции
	
	МенюДиректива = Форма.Элементы.Добавить(ИмяРеквизита + "_Директива", Тип("ГруппаФормы"), Элемент);
	МенюДиректива.Заголовок		= НСтр("ru='Компиляция'");
	МенюДиректива.Вид			= ВидГруппыФормы.Подменю;
	МенюДиректива.Подсказка		= НСтр("ru='Управление директивой компиляции кода'");
	МенюДиректива.РазрешитьИзменениеСостава = Ложь;
	
	#Область НаСервере
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "НаСервере");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Отображение	= ОтображениеКнопки.Текст;
	КомандаФормы.Заголовок		= НСтр("ru='На сервере'");
	КомандаФормы.Подсказка		= НСтр("ru='Выполнять код на сервере'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), МенюДиректива);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.ИзменятьКомпиляцию;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	ЭлементКоманды.Пометка		= Ложь;
	ЭлементКоманды.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
	#КонецОбласти
	
	#Область НаКлиенте
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "НаКлиенте");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Отображение	= ОтображениеКнопки.Текст;
	КомандаФормы.Заголовок		= НСтр("ru='На клиенте'");
	КомандаФормы.Подсказка		= НСтр("ru='Выполнять код на клиенте'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), МенюДиректива);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.ИзменятьКомпиляцию;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	ЭлементКоманды.Пометка		= Ложь;
	ЭлементКоманды.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
	#КонецОбласти
	
	#Область КлиентСервер
	ИмяКоманды = СтрШаблон(СтрШаблонИмени, ИмяРеквизита, "КлиентСервер");
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие		= "КомандаКонсолиКода";
	КомандаФормы.Отображение	= ОтображениеКнопки.Текст;
	КомандаФормы.Заголовок		= НСтр("ru='Везде'");
	КомандаФормы.Подсказка		= НСтр("ru='Код может выполняться на клиенте и на сервере'");
	
	ЭлементКоманды = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), МенюДиректива);
	ЭлементКоманды.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	ЭлементКоманды.Видимость	= ПараметрыПанели.ИзменятьКомпиляцию;
	ЭлементКоманды.ИмяКоманды	= ИмяКоманды;
	ЭлементКоманды.Пометка		= Истина;
	ЭлементКоманды.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
	#КонецОбласти
	
	#КонецОбласти
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьРеквизитыКонсолиКода(знач Форма)
	РеквизитПараметры = PAPI_КонсольКодаКлиентСервер.ИмяРеквизитаПараметрыКонсолиКода();
	Если PAPI_ОбщегоНазначенияВызовСервера.ЕстьРеквизитИлиСвойствоОбъекта(Форма, РеквизитПараметры) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитТаблица		= PAPI_КонсольКодаКлиентСервер.ИмяТаблицыПараметрыКонсолейКода();
	РеквизитВремФайлы	= PAPI_КонсольКодаКлиентСервер.ИмяРеквизитаВременныеФайлы();
	
	ТаблицаКонсоли = ТаблицаПараметровКонсоли();
	
	МассивДобавить = Новый Массив;
	МассивДобавить.Добавить(Новый РеквизитФормы(РеквизитПараметры, Новый ОписаниеТипов()));
	МассивДобавить.Добавить(Новый РеквизитФормы(РеквизитТаблица, Новый ОписаниеТипов("ТаблицаЗначений")));
	МассивДобавить.Добавить(Новый РеквизитФормы(РеквизитВремФайлы, Новый ОписаниеТипов("СписокЗначений")));
	
	Для Каждого Колонка Из ТаблицаКонсоли.Колонки Цикл
		НовыйРеквизитФормы = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, РеквизитТаблица, Колонка.Заголовок);
		МассивДобавить.Добавить(НовыйРеквизитФормы);
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(МассивДобавить);
КонецПроцедуры

Процедура ИнициализацияМетаданных(знач Параметры)
	
	КоллекцияОбщихМодулей = PAPI_КонсольКодаВызовСервера.ПолучитьКоллекциюОбщихМодулей();
	
	ОбщиеМодулиJSON			= PAPI_КонсольКодаКлиентСервер.СтруктуруВСтрокуJSON(КоллекцияОбщихМодулей.Общие);
	КлиентскиеМодулиJSON	= PAPI_КонсольКодаКлиентСервер.СтруктуруВСтрокуJSON(КоллекцияОбщихМодулей.Клиент);
	СерверныеМодулиJSON		= PAPI_КонсольКодаКлиентСервер.СтруктуруВСтрокуJSON(КоллекцияОбщихМодулей.Сервер);
	
	Параметры.АдресОбщихМодулей			= ПоместитьВоВременноеХранилище(ОбщиеМодулиJSON, Параметры.УникальныйИдентификатор);
	Параметры.АдресКлиентскихМодулей	= ПоместитьВоВременноеХранилище(КлиентскиеМодулиJSON, Параметры.УникальныйИдентификатор);
	Параметры.АдресСерверныхМодулей		= ПоместитьВоВременноеХранилище(СерверныеМодулиJSON, Параметры.УникальныйИдентификатор);
	
	Параметры.ИменаОбщихМодулей	= ПолучитьСоответствиеОбщихМодулей(КоллекцияОбщихМодулей);
	Параметры.ГлобальныйМодули	= ПолучитьМассивГлобальныхМодулей(КоллекцияОбщихМодулей);
	
КонецПроцедуры

Функция ТаблицаПараметровКонсоли()
	ТаблицаКонсоли	= Новый ТаблицаЗначений;
	ТаблицаКонсоли.Колонки.Добавить("ИмяДляСравнения"		, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	ТаблицаКонсоли.Колонки.Добавить("ИмяРеквизита"			, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	ТаблицаКонсоли.Колонки.Добавить("ИмяКоманднойПанели"	, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	ТаблицаКонсоли.Колонки.Добавить("ИмяПоляHTML"			, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	ТаблицаКонсоли.Колонки.Добавить("ИндексныйФайл"			, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	ТаблицаКонсоли.Колонки.Добавить("ИсходникиЗагружены"	, Новый ОписаниеТипов("Булево"));
	ТаблицаКонсоли.Колонки.Добавить("ДокументЗагружен"		, Новый ОписаниеТипов("Булево"));
	ТаблицаКонсоли.Колонки.Добавить("КаталогИсходногоКода"	, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	
	ТаблицаКонсоли.Колонки.Добавить("РежимЗапроса"			, Новый ОписаниеТипов("Булево"));
	ТаблицаКонсоли.Колонки.Добавить("РежимСравнения"		, Новый ОписаниеТипов("Булево"));

	ТаблицаКонсоли.Колонки.Добавить("ТекстАлгоритма"		, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	ТаблицаКонсоли.Колонки.Добавить("ОригинальныйТекст"		, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(0));
	
	ТаблицаКонсоли.Колонки.Добавить("ТекущаяТема"			, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(30));
	ТаблицаКонсоли.Колонки.Добавить("БыстрыеПодсказки"		, Новый ОписаниеТипов("Булево"));
	ТаблицаКонсоли.Колонки.Добавить("ПодсвечиватьЗапросы"	, Новый ОписаниеТипов("Булево"));
	ТаблицаКонсоли.Колонки.Добавить("КартаКода"				, Новый ОписаниеТипов("Булево"));
	ТаблицаКонсоли.Колонки.Добавить("ПробелыИТабуляции"		, Новый ОписаниеТипов("Булево"));
	ТаблицаКонсоли.Колонки.Добавить("СтрокаСостояния"		, Новый ОписаниеТипов("Булево"));
	
	ТаблицаКонсоли.Колонки.Добавить("ДирективаКомпиляции"	, PAPI_ОбщегоНазначенияВызовСервера.ОписаниеТипаСтрока(10)); // НаКлиенте, НаСервере, пустое значение
	
	ТаблицаКонсоли.Колонки.Добавить("ОповещатьПриИзменении"	, Новый ОписаниеТипов("Булево"));
	
	ТаблицаКонсоли.Колонки.Добавить("ДополнительныеСвойства"); // различные дополнительные свойства для конструктора
	
	Возврат ТаблицаКонсоли;
КонецФункции

Функция ПолучитьСоответствиеОбщихМодулей(знач КоллекцияМодулей)
	ОбщиеМодули = Новый Соответствие;
	
	Для Каждого Обход Из КоллекцияМодулей.Общие Цикл
		ОбщиеМодули.Вставить(НРег(Обход.Ключ), Обход.Ключ);
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(ОбщиеМодули);
КонецФункции

Функция ПолучитьМассивГлобальныхМодулей(знач КоллекцияМодулей)
	Модули = Новый Массив;
	
	Для Каждого Обход Из КоллекцияМодулей.Глобальные Цикл
		Модули.Добавить(Обход.Ключ);
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(Модули);
КонецФункции

#КонецОбласти

