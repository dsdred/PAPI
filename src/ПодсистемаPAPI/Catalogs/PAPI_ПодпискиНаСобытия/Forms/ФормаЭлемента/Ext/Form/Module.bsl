#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда 
		
		// Создан копированием++
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
			И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("СправочникСсылка.PAPI_ПодпискиНаСобытия") Тогда	
			
			ПриЧтенииНаСервере(Параметры.ЗначениеКопирования);
				
		КонецЕсли;
		// Создан копированием--
	
		Если Не ЗначениеЗаполнено(Объект.ТипВыполнения) Тогда 
			Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.Произвольный;
		КонецЕсли;
		
	КонецЕсли; 
	
	ВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора <> Неопределено Тогда 
		Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения") Тогда
		
			Если ИсточникВыбора.ИмяФормы = "Справочник.PAPI_ПодпискиНаСобытия.Форма.ВыборИсточников" Тогда 
			
				Если Объект.Источники.Количество() > 0 Тогда 
					Объект.Источники.Очистить();
				КонецЕсли;
				
				Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда 
					
					Для Каждого элМассива Из ВыбранноеЗначение Цикл 
						ЗаполнитьЗначенияСвойств(Объект.Источники.Добавить(), элМассива); 
					КонецЦикла;
					
					Если Не Модифицированность Тогда 
						Модифицированность = Истина
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.PAPI_КонсольКода.Форма.Форма" Тогда				
				КодПодписки = ВыбранноеЗначение;
				Модифицированность = Истина;
			КонецЕсли;			
			
        КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Не ТекущийОбъект.ЭтоГруппа Тогда

		СтруктураНастройки = PAPI_ПодпискиНаСобытия.СтруктураНастроекПодписки(ТекущийОбъект.Настройки);

		Если СтруктураНастройки.Свойство("СП_КодПодписки") Тогда
			КодПодписки = СтруктураНастройки.СП_КодПодписки;	
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не Объект.ЭтоГруппа Тогда
		ПоместитьСтруктураАлгоритмаВНастройки(ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовГруппыСтраницы

&НаКлиенте
Процедура СобытиеПриИзменении(Элемент)
	
	Если Объект.Источники.Количество() > 0  Тогда 
		перТипПодписки = PAPI_ПодпискиНаСобытия.ПолучитьТипПодпискиСтрокой(Объект.Событие);
		
		// Доступные Источники
		ОбъектовМетаданныхПоПодписке = PAPI_ПодпискиНаСобытия.ПолучитьИсточникиПоТипу(перТипПодписки);		
		
		Для Каждого текСтрока Из Объект.Источники Цикл  
			
			Если СтрНайти(текСтрока.Источник, ".") > 0 Тогда 
				
				МассивРазделенныхЭлементов = СтрРазделить(текСтрока.Источник, ".", Истина);	
				Если МассивРазделенныхЭлементов.Количество() >= 1 Тогда 
		
					// Головной элемент
					ИскомоеЗначение = МассивРазделенныхЭлементов[0];
					
				Иначе 
					
					ИскомоеЗначение = "";
					
				КонецЕсли; 
				
			Иначе
				ИскомоеЗначение = текСтрока.Источник;	
			КонецЕсли;	
			
			Если Не ПустаяСтрока(ИскомоеЗначение)
				И ОбъектовМетаданныхПоПодписке.Найти(ИскомоеЗначение) <> Неопределено Тогда  
				
				текСтрока.Подписка = 1;   
				
			Иначе
				
				текСтрока.Подписка = 0;
				
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ТипВыполненияПриИзменении(Элемент) 
	
	ВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИсточники(Команда)
	
	ТипПодписки = Объект.Событие;
	
	МассивВыбранных = Новый Массив;
	Для Каждого стрИсточники Из Объект.Источники Цикл 
		МассивВыбранных.Добавить(стрИсточники.Источник);	
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура("МассивВыбранных, ТипПодписки", МассивВыбранных, ТипПодписки);
	ОткрытьФорму("Справочник.PAPI_ПодпискиНаСобытия.Форма.ВыборИсточников",ПараметрыФормы, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовГруппыСтраницы

&НаКлиенте
Процедура КодПодпискиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПарамОткрытия = Новый Структура;
	ПарамОткрытия.Вставить("Заголовок", "Алгоритм обработчика события");
	ПарамОткрытия.Вставить("ТекстАлгоритма", Элемент.ТекстРедактирования);	
	ПарамОткрытия.Вставить("РежимВыбора", Истина);	
	
	ПарамОткрытия.Вставить("ПользовательскиеОбъекты", ПользовательскиеОбъектыДляКонсолиКода());
	
	ОткрытьФорму("Обработка.PAPI_КонсольКода.Форма.Форма", 
			ПарамОткрытия, 
			ЭтотОбъект, 
			, 
			, 
			, 
			, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КонсольКода

&НаКлиенте
Функция ПользовательскиеОбъектыДляКонсолиКода()
	
	ПользовательскиОбъекты = Новый Структура;
	
	ПараметрыСтрокой = "";
	Если Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ПриКопировании") Тогда
		ПараметрыСтрокой = "Источник, ОбъектКопирования";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ОбработкаПроверкиЗаполнения") Тогда
		ПараметрыСтрокой = "Источник, Отказ, ПроверяемыеРеквизиты";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ПередЗаписью") Тогда
		ПараметрыСтрокой = "Источник, Отказ, РежимЗаписи, РежимПроведения";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ПриЗаписи") Тогда
		ПараметрыСтрокой = "Источник, Отказ";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ПередУдалением") Тогда
		ПараметрыСтрокой = "Источник, Отказ";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ОбработкаПроведения") Тогда
		ПараметрыСтрокой = "Источник, Отказ, РежимПроведения";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ОбработкаУдаленияПроведения") Тогда
		ПараметрыСтрокой = "Источник, Отказ";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ОбработкаФормированияПоВерсииИсторииДанных") Тогда
		ПараметрыСтрокой = "Источник, ДанныеВерсии, НомерВерсии, ИсключитьДанные, СтандартнаяОбработка";
	ИначеЕсли Объект.Событие = ПредопределенноеЗначение("Перечисление.PAPI_ТипПодпискиНаСобытие.ОбработкаПослеЗаписиВерсийИсторииДанных") Тогда
		ПараметрыСтрокой = "Источник, ИнформацияОЗаписиВерсий, ПараметрыПодписки";
	КонецЕсли;
	
	Для Каждого ИмяПараметра Из СтрРазделить(ПараметрыСтрокой, ",", Ложь) Цикл
		ПользовательскиОбъекты.Вставить(ИмяПараметра, Новый Структура("name", ИмяПараметра));
	КонецЦикла;
	
	Возврат ПользовательскиОбъекты;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ПоместитьСтруктураАлгоритмаВНастройки(ТекущийОбъект)
		
// СтруктураПодписки ++		                    
	СтруктураДанных = Новый Структура;
	СтруктураПодписки = Новый Структура;
	СтруктураПодписки.Вставить("КодПодписки", КодПодписки);
		
	СтруктураДанных.Вставить("СтруктураПодписки", СтруктураПодписки);
// СтруктураПодписки --

	ДанныеXML = PAPI_ОбщегоНазначенияВызовСервера.СериализаторXML(СтруктураДанных);
	ТекущийОбъект.Настройки = Новый ХранилищеЗначения(?(ДанныеXML.Отработал, ДанныеXML.Результат,""));
	
КонецПроцедуры 

&НаСервере
Процедура ВидимостьИДоступностьЭлементов()

	Элементы.Алгоритм.Видимость 					=  Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.Алгоритм;
	Элементы.КодПодписки.Видимость 					=  Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.Произвольный;
	Элементы.ГруппаВнешняяОбработка.Видимость 		=  Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.ВнешняяОбработка;
	
КонецПроцедуры	

#КонецОбласти