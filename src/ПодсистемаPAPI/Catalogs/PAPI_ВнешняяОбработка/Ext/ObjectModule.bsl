#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	 
	Если Не ЭтоГруппа Тогда 
		Если Не ПроверитьЗаполнение() Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	 
	// Обновление подписок использующих данный Алгоритм
	РегистрИсполнителиПодписок = "PAPI_ИсполнителиПодписок";
	Если Не ЭтоГруппа 
		И Метаданные.РегистрыСведений.Найти(РегистрИсполнителиПодписок) <> Неопределено Тогда 
		РегистрыСведений[РегистрИсполнителиПодписок].ОбновитьЗаписиДляВнешнейОбработки(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ТекстОшибки = ПроверитьУникальностьЭлементов();
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		
		Отказ = Истина;  
		PAPI_ОбщегоНазначенияКлиентСервер.КраткоеСообщениеПользователю(ТекстОшибки, "Объект.ИмяВнешнейОбработки");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Контролирует уникальность элемента в базе.
//
//  Возвращаемое значение:
//      Текст ошибки.
//
Функция ПроверитьУникальностьЭлементов()
	
	Результат = "";	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.PAPI_ВнешняяОбработка
		|ГДЕ 
		|	НЕ ПометкаУдаления
		|	И ИмяВнешнейОбработки = &ИмяВнешнейОбработки
		|	И Ссылка <> &Ссылка
		|");
	Запрос.УстановитьПараметр("Ссылка",       Ссылка);
	Запрос.УстановитьПараметр("ИмяВнешнейОбработки", ИмяВнешнейОбработки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда 
		
		ТекстОшибки =	НСтр("ru = 'Внешняя обработка с именем %1 уже существует';
						|en = 'DataProcessors Name %1 already exists'");
		Результат 	=	СтрШаблон(ТекстОшибки, Строка(ИмяВнешнейОбработки));
	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции  

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'; en = 'Invalid object call on the client.'");
#КонецЕсли