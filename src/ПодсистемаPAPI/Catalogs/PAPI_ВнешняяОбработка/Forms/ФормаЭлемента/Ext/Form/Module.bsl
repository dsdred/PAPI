#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодсистемаПодписокЕсть = PAPI_ОбщегоНазначенияВызовСервера.ПодчиненнаяПодсистемаPAPIСуществует("PAPI_ПодпискиНаСобытия");
	
	Если Объект.ВидОбработки =  PAPI_РаботаСВнешнимиОбработками.ВидОбработкиПроизвольная()
		И Не ПодсистемаПодписокЕсть Тогда 
		ПодсистемаПодписокЕсть = Ложь;
	КонецЕсли;
	
	ВидимостьНаСтраницеВычисления();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницаОсновная

&НаКлиенте
Процедура ПолноеИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр 	= НСтр("ru = 'Внешняя обработка (*.epf)'; en = 'External processing (*.epf)'"); 
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите внешнюю обработку'; en = 'Select external processing'");
	
	// Вызов диалога выбора
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("КаталогНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("ДиалогВыбора", ДиалогВыбораФайла)));
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогВыбора = ДополнительныеПараметры.ДиалогВыбора;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		// Запоминаем выбранный каталог
		Объект.ПолноеИмяФайла = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДоступность(Команда)
	
	ПроверкаФайла = ПроверитьДоступностьНаСервере(Объект.ПолноеИмяФайла);  
	
	Если ПроверкаФайла Тогда

		ПолучитьПроцедурыФункцииВнешнейОбработки(Объект.ПолноеИмяФайла, Объект.БезопасныйРежим);	
		
	Иначе 
		ТекстСообщения = НСтр("ru = 'Внешняя обработка отсутствует';
						|en = 'DataProcessors missing'");   
		ПолеОбъекта = "Объект.ПолноеИмяФайла"; 
		
		PAPI_ОбщегоНазначенияКлиентСервер.КраткоеСообщениеПользователю(ТекстСообщения, ПолеОбъекта); 
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПроцедурыФункцииВнешнейОбработки(ПолноеИмяФайла, БезопасныйРежим) 
	
	ОписаниеЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
	ОписаниеЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь; 
	внОбработка = ВнешниеОбработки.Создать(ПолноеИмяФайла, БезопасныйРежим, ОписаниеЗащиты);
	Попытка
		ОписаниеПроцедурИФункций 	= внОбработка.ОписаниеДляPAPI();
	Исключение
		ТекстОшибки = "В модуле внешней обработки не найден служебный экспортный метод с именем 'ОписаниеДляPAPI'
		|	См. комментарий к функции PAPI_РаботаСВнешнимиОбработками.ОписаниеВнешнейОбработкиДляPAPI";		
		ВызватьИсключение ТекстОшибки + Символы.ПС + ОписаниеОшибки();
	КонецПопытки;
	
	
	Если ТипЗнч(ОписаниеПроцедурИФункций) = Тип("Структура") Тогда 
		
		Если ОписаниеПроцедурИФункций.Свойство("Вид") Тогда 
			Объект.ВидОбработки = ОписаниеПроцедурИФункций.Вид;
		КонецЕсли;	
		
		Если ОписаниеПроцедурИФункций.Свойство("БезопасныйРежим") Тогда 
			Объект.БезопасныйРежим = ОписаниеПроцедурИФункций.БезопасныйРежим;
		КонецЕсли;
		
		Если ОписаниеПроцедурИФункций.Свойство("Информация") Тогда 
			Объект.Комментарий = ОписаниеПроцедурИФункций.Информация;
		КонецЕсли;
		
		Если ОписаниеПроцедурИФункций.Свойство("ИмяВнешнейОбработки") Тогда 
			Объект.ИмяВнешнейОбработки = ОписаниеПроцедурИФункций.ИмяВнешнейОбработки;
		КонецЕсли;
		
		Если ОписаниеПроцедурИФункций.Свойство("Команды") 
			И ТипЗнч(ОписаниеПроцедурИФункций.Команды) = Тип("ТаблицаЗначений") Тогда
			
			Если Объект.Команды.Количество() > 0 Тогда 
				Объект.Команды.Очистить();
			КонецЕсли;	
			
			Если Объект.ВидОбработки =  PAPI_РаботаСВнешнимиОбработками.ВидОбработкиПроизвольная() Тогда 
								
				Отбор = Новый Структура("Подписка", Ложь);  
				НайденныеСтроки = ОписаниеПроцедурИФункций.Команды.НайтиСтроки(Отбор);
				
				Если НайденныеСтроки.Количество() > 0 Тогда
					Для Каждого текСтрока Из НайденныеСтроки Цикл 
						
						ЗаполнитьЗначенияСвойств(Объект.Команды.Добавить(), текСтрока);
						
					КонецЦикла;	
				КонецЕсли;	
				
			ИначеЕсли Объект.ВидОбработки =  PAPI_РаботаСВнешнимиОбработками.ВидОбработкиПодписки() Тогда
				
				Отбор = Новый Структура("Подписка", Истина);  
				НайденныеСтроки = ОписаниеПроцедурИФункций.Команды.НайтиСтроки(Отбор);
				
				Если НайденныеСтроки.Количество() > 0 Тогда
					Для Каждого текСтрока Из НайденныеСтроки Цикл 
						
						ЗаполнитьЗначенияСвойств(Объект.Команды.Добавить(), текСтрока);
						
					КонецЦикла;	
				КонецЕсли;
				
			Иначе
				
				Объект.Команды.Загрузить(ОписаниеПроцедурИФункций.Команды);				
								
			КонецЕсли;
		КонецЕсли;	
		
		ВидимостьНаСтраницеВычисления();

		Если Не Модифицированность Тогда 
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВидимостьНаСтраницеВычисления()
	
	Элементы.КомандыТипПодписки.Видимость 	= ПодсистемаПодписокЕсть;
	Элементы.КомандыТипИсточника.Видимость 	= ПодсистемаПодписокЕсть;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьДоступностьНаСервере(Знач ПолноеИмяФайла = "")
	
	Результат = Ложь;
	
	Если ЗначениеЗаполнено(ПолноеИмяФайла) Тогда
		ПроверкаФайла = Новый Файл(ПолноеИмяФайла);
		Если ПроверкаФайла.Существует() Тогда
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 


#КонецОбласти