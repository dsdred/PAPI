 
#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда 
		
		// Создан копированием++
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
			И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("СправочникСсылка.PAPI_ЧтениеСообщений") Тогда	
			
			ПриЧтенииНаСервере(Параметры.ЗначениеКопирования);
				
		КонецЕсли;
		// Создан копированием--
	
		Если Не ЗначениеЗаполнено(Объект.ТипВыполнения) Тогда 
			Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.Произвольный;
		КонецЕсли;
		
	КонецЕсли; 
	
	ВидимостьИДоступностьЭлементов();

КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Не ТекущийОбъект.ЭтоГруппа Тогда

		СтруктураНастройки = PAPI_РаботаСВходящимиСообщениями.СтруктураНастроекЧтенияСообщений(ТекущийОбъект.Настройки);

		Если СтруктураНастройки.Свойство("СП_КодВыполнения") Тогда
			КодВыполнения = СтруктураНастройки.СП_КодВыполнения;	
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры  

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не Объект.ЭтоГруппа Тогда
		ПоместитьСтруктураЧтенияСообщений(ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипВыполненияПриИзменении(Элемент)
	ВидимостьИДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора <> Неопределено Тогда 
		Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения") Тогда		
			Если ИсточникВыбора.ИмяФормы = "Обработка.PAPI_КонсольКода.Форма.Форма" Тогда				
				КодВыполнения = ВыбранноеЗначение;
				Модифицированность = Истина;
			КонецЕсли;			
        КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КодВыполненияОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПарамОткрытия = Новый Структура;
	ПарамОткрытия.Вставить("Заголовок", "Алгоритм чтения сообщения");
	ПарамОткрытия.Вставить("ТекстАлгоритма", Элемент.ТекстРедактирования);	
	ПарамОткрытия.Вставить("РежимВыбора", Истина);	
	
	ОткрытьФорму("Обработка.PAPI_КонсольКода.Форма.Форма", 
			ПарамОткрытия, 
			ЭтотОбъект, 
			, 
			, 
			, 
			, 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПоместитьСтруктураЧтенияСообщений(ТекущийОбъект)
		
// СтруктураЧтенияСообщений ++		                    
	СтруктураДанных = Новый Структура;
	СтруктураЧтенияСообщений = Новый Структура;
	СтруктураЧтенияСообщений.Вставить("КодВыполнения", КодВыполнения);
		
	СтруктураДанных.Вставить("СтруктураЧтенияСообщений", СтруктураЧтенияСообщений);
// СтруктураЧтенияСообщений --

	ДанныеXML = PAPI_ОбщегоНазначенияВызовСервера.СериализаторXML(СтруктураДанных);
	ТекущийОбъект.Настройки = Новый ХранилищеЗначения(?(ДанныеXML.Отработал, ДанныеXML.Результат,""));
	
КонецПроцедуры 

&НаСервере
Процедура ВидимостьИДоступностьЭлементов()

	Элементы.Алгоритм.Видимость 					=  Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.Алгоритм;
	Элементы.КодВыполнения.Видимость 				=  Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.Произвольный;
	//Элементы.ГруппаВнешняяОбработка.Видимость 		=  Объект.ТипВыполнения = Перечисления.PAPI_ТипВыполнения.ВнешняяОбработка;
	
КонецПроцедуры	

#КонецОбласти

