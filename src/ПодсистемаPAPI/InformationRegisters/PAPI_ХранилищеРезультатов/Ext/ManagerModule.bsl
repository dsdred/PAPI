#Область СлужебныеПроцедурыИФункции
// Добавляет запись в регистр по переданным значениям структуры.
//
// Параметры:
//  СтруктураЗаписи	 - Структура - см. PAPI_ХранилищеРезультатов.ПолучитьСтруктуруПоУмолчанию() 
// 
// Возвращаемое значение:
//  Результат - Булево 
//
Функция ДобавитьИзменитьЗапись(СтруктураЗаписи) Экспорт

	Результат = Ложь;
	
	ВключенПривилегированныйРежим = Ложь;
	Если Не ПривилегированныйРежим() Тогда  
		ВключенПривилегированныйРежим = Истина;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);
	КонецЕсли;						
				
	
	Если ТипЗнч(СтруктураЗаписи) = Тип("Структура") Тогда
		
		СтруктураРегистраПоУмолчанию = ПолучитьСтруктуруПоУмолчанию();
		
		НаборЗаписей = РегистрыСведений.PAPI_ХранилищеРезультатов.СоздатьНаборЗаписей();  			
		НаборЗаписей.Отбор.КлючПоиска.Установить(СтруктураЗаписи.КлючПоиска);
		
		Если СтруктураЗаписи.Свойство("НомерЧасти") Тогда 
			НаборЗаписей.Отбор.НомерЧасти.Установить(СтруктураЗаписи.НомерЧасти);
		КонецЕсли;

		НаборЗаписей.Прочитать();

		Если НаборЗаписей.Количество() <= 1 Тогда 
			
			Если НаборЗаписей.Количество() = 0 Тогда
				НоваяЗаписьРегистра = НаборЗаписей.Добавить();
				
				// TODO: Проверить запущено ФЗ, если да старое ФЗ надо остановить ???
				
			Иначе
				НоваяЗаписьРегистра = НаборЗаписей[0];
			КонецЕсли;
			
			Для Каждого элСтруктурыЗаписи Из СтруктураРегистраПоУмолчанию Цикл 
				
				Если ВРег(элСтруктурыЗаписи.Ключ) = ВРег("ДанныеЧастиПакета") Тогда

					НоваяЗаписьРегистра.ДанныеЧастиПакета = ?(СтруктураЗаписи.Свойство("Результат"),
														Новый ХранилищеЗначения(СтруктураЗаписи.Результат),
														Новый ХранилищеЗначения(элСтруктурыЗаписи.Результат));
														
				Иначе

					НоваяЗаписьРегистра[элСтруктурыЗаписи.Ключ] = ?(СтруктураЗаписи.Свойство(элСтруктурыЗаписи.Ключ),
														СтруктураЗаписи[элСтруктурыЗаписи.Ключ],
														элСтруктурыЗаписи.Значение);	
				КонецЕсли;	
				
			КонецЦикла;
			
			Попытка      
				
				НаборЗаписей.Записать();
				Результат = Истина;  
				
			Исключение        
				
				ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());		
				PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ХранилищеРезультатов");	
									
			КонецПопытки;	
				
		Иначе
			
			ТекстОшибки = НСтр("ru = 'Найдено более одной записи'; en = 'More than one entry found'");		
			PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ХранилищеРезультатов");
				
		КонецЕсли;	
	Иначе
		
		ТекстОшибки = НСтр("ru = 'Запись не является Структурой'; en = 'Record is not a Structure'");		
		PAPI_Логирование.ЗаписатьВЛог("PAPI.Ошибка", Перечисления.PAPI_ТипЛога.Ошибка, ТекстОшибки, "РегистрыСведений.PAPI_ХранилищеРезультатов");
			
	КонецЕсли;
	
	Если ВключенПривилегированныйРежим Тогда 
		ВключенПривилегированныйРежим = Ложь;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);	
	КонецЕсли;

	
	Возврат Результат;
	
КонецФункции    

// Чистим регистр от старых данных
//
// Параметры:
//  КлючПоиска	- Строка - Ключ поиска результата
//
Процедура УдалитьЗаписиРегистра(КлючПоиска) Экспорт 
	
	ВключенПривилегированныйРежим = Ложь;
	Если Не ПривилегированныйРежим() Тогда  
		ВключенПривилегированныйРежим = Истина;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);
	КонецЕсли;									
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	PAPI_ХранилищеРезультатов.КлючПоиска КАК КлючПоиска
		|ИЗ
		|	РегистрСведений.PAPI_ХранилищеРезультатов КАК PAPI_ХранилищеРезультатов
		|ГДЕ
		|	PAPI_ХранилищеРезультатов.КлючПоиска ПОДОБНО &КлючПоиска";
	
	Запрос.УстановитьПараметр("КлючПоиска", КлючПоиска + "%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.PAPI_ХранилищеРезультатов.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.КлючПоиска.Установить(КлючПоиска); 
		НаборЗаписей.Записать();

	КонецЦикла;   
	
	Если ВключенПривилегированныйРежим Тогда 
		ВключенПривилегированныйРежим = Ложь;
		УстановитьПривилегированныйРежим(ВключенПривилегированныйРежим);	
	КонецЕсли;

КонецПроцедуры	

// Структура для записи в регистр "PAPI_ХранилищеРезультатов" 
// 
// Возвращаемое значение:
//  СтруктураРегистра - Структура:
//		КлючПоиска		- Строка - Ключ для поиска результата
//		НомерЧасти		- Число - Номер части, если результат разделен на части
//		ДатаСоздания 	- Дата - Дата создания записи
//		Результат 		- Произвольный - Хранимое значение
//		ХешЧасти		- Строка - Уникальная метка см PAPI_ОбщегоНазначенияВызовСервера Область РаботаС_Hash 
//
Функция ПолучитьСтруктуруПоУмолчанию() Экспорт
	
	СтруктураРегистра = Новый Структура;
	СтруктураРегистра.Вставить("КлючПоиска",			"ОбщийПакет");
	СтруктураРегистра.Вставить("НомерЧасти",			0);
	// СтруктураРегистра.Вставить("ВсегоЧастей",		0);
	СтруктураРегистра.Вставить("ДатаСоздания",		ТекущаяДатаСеанса());
	СтруктураРегистра.Вставить("Результат",			Новый массив);
	СтруктураРегистра.Вставить("ХешЧасти",			"");
	
	Возврат СтруктураРегистра;
КонецФункции

#КонецОбласти