
// Структура настроек
// 
// Возвращаемое значение:
//  СтруктураДанных - Структура с параметрами очистки старых данных
//
Функция СтруктураНастроек() Экспорт 
	
	СтруктураДанных = Новый Структура;
	ЗначенияПоУмолчанию = ПолучитьСтруктуруПоУмолчанию();
		
	Настройки = PAPI_ОбщегоНазначенияВызовСервера.ПрочитатьЗначениеКонстанты("PAPI_НастройкаХраненияДанных");
	НастройкиПолучены = Ложь;	
	НужноЗаписать = Ложь;  
	Если ТипЗнч(Настройки) = Тип("ХранилищеЗначения") Тогда
		перСтруктураНастройки = Настройки.Получить();
		
		Если перСтруктураНастройки <> Неопределено
			И ТипЗнч(перСтруктураНастройки) = Тип("Структура") Тогда
			
			НастройкиПолучены = Истина;
	
			Для Каждого ТекЗначение Из ЗначенияПоУмолчанию Цикл 
				
				Если перСтруктураНастройки.Свойство(ТекЗначение.Ключ) Тогда
					ТекДанные = перСтруктураНастройки[ТекЗначение.Ключ]; 
				Иначе
					ТекДанные = ЗначениеХраненияПоУмолчанию();  
					
					Если Не НужноЗаписать Тогда 
						НужноЗаписать = Истина;
					КонецЕсли;	
					
				КонецЕсли;	
					
				СтруктураДанных.Вставить(ТекЗначение.Ключ, ТекДанные);	
					
			КонецЦикла;	 				
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если Не НастройкиПолучены Тогда 
		
		НужноЗаписать = Истина;
			
		Для Каждого ТекЗначение Из ЗначенияПоУмолчанию Цикл 
				
			СтруктураДанных.Вставить(ТекЗначение.Ключ, ТекЗначение.Значение);	
				
		КонецЦикла;		
		
	КонецЕсли;	
	
	Если НужноЗаписать Тогда 
		
		PAPI_ОбщегоНазначенияВызовСервера.ПоменятьЗначениеКонстанты("PAPI_НастройкаХраненияДанных", Новый ХранилищеЗначения(СтруктураДанных)); 
		
	КонецЕсли;	
	
	
	Возврат СтруктураДанных;
	
КонецФункции

// Структура по умолчанию
//
// Возвращаемое значение:
//  ЗначенияПоУмолчанию - Соответствие - Значения на основании которых будут чистится старые данные 
// Информация: 
// 	СрокХраненияВходящиеСообщенияСервисаИнтеграции 	-> Регистры сведений.PAPI_ВходящиеСообщенияСервисаИнтеграции
// 	СрокХраненияЗапросНедостающихДанных 			-> Регистры сведений.PAPI_ЗапросНедостающихДанных
//  СрокХраненияЛогАлгоритмов 						-> Регистры сведений.PAPI_ЛогАлгоритмов
//  СрокХраненияЛогМетодов 							-> Регистры сведений.PAPI_ЛогМетодов
//  СрокХраненияОчередьАлгоритмов 					-> Регистры сведений.PAPI_ОчередьАлгоритмовДляФоновогоВыполнения
//  СрокХраненияОчередьДокументов 					-> Регистры сведений.PAPI_ОчередьДействийСДокументами
//  СрокХраненияРезультатов 						-> Регистры сведений.PAPI_ХранилищеРезультатов
//  СрокХраненияВходящихЗапросов 					-> Документы.PAPI_ВходящийЗапрос
//
Функция ПолучитьСтруктуруПоУмолчанию()
	
	ЗначениеПоУмолчанию = ЗначениеХраненияПоУмолчанию();
	
	ЗначенияПоУмолчанию = Новый Соответствие;
	ЗначенияПоУмолчанию.Вставить("СрокХраненияВходящиеСообщенияСервисаИнтеграции", 	ЗначениеПоУмолчанию);
	ЗначенияПоУмолчанию.Вставить("СрокХраненияЗапросНедостающихДанных", 			ЗначениеПоУмолчанию);
	ЗначенияПоУмолчанию.Вставить("СрокХраненияЛогАлгоритмов", 						ЗначениеПоУмолчанию);
	ЗначенияПоУмолчанию.Вставить("СрокХраненияЛогМетодов", 							ЗначениеПоУмолчанию);
	ЗначенияПоУмолчанию.Вставить("СрокХраненияОчередьАлгоритмов", 					ЗначениеПоУмолчанию);
	ЗначенияПоУмолчанию.Вставить("СрокХраненияОчередьДокументов", 					ЗначениеПоУмолчанию);
    ЗначенияПоУмолчанию.Вставить("СрокХраненияРезультатов", 						ЗначениеПоУмолчанию);
	ЗначенияПоУмолчанию.Вставить("СрокХраненияВходящихЗапросов", 					ЗначениеПоУмолчанию);
	
	Возврат ЗначенияПоУмолчанию;    
	
КонецФункции  

// Функция - Значение хранения по умолчанию
// 
// Возвращаемое значение:
//  Перечисления.PAPI_СрокиХранения.Бессрочно - бессрочное хранение 
//
Функция ЗначениеХраненияПоУмолчанию()
	
	Возврат Перечисления.PAPI_СрокиХранения.Бессрочно;	
	
КонецФункции

	
